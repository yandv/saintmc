package tk.yallandev.saintmc.bukkit.exploit.register;

import java.io.IOException;
import java.util.UUID;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;

import org.bukkit.Material;
import org.bukkit.inventory.ItemStack;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;
import com.comphenix.protocol.wrappers.nbt.NbtCompound;
import com.comphenix.protocol.wrappers.nbt.NbtFactory;
import com.comphenix.protocol.wrappers.nbt.NbtList;
import com.google.common.cache.Cache;
import com.google.common.cache.CacheBuilder;

import tk.yallandev.saintmc.bukkit.BukkitMain;
import tk.yallandev.saintmc.bukkit.exploit.Exploit;

public class BookflooderExploit implements Exploit {

	private Cache<UUID, Integer> banCache = CacheBuilder.newBuilder().concurrencyLevel(2).initialCapacity(20)
			.expireAfterWrite(1000, TimeUnit.MILLISECONDS).build();

	@Override
	public void register() {
		ProtocolLibrary.getProtocolManager().getAsynchronousManager()
				.registerAsyncHandler(new PacketAdapter(BukkitMain.getInstance(), PacketType.Play.Client.BLOCK_PLACE) {
					@Override
					public void onPacketReceiving(PacketEvent event) {
						if (event.getPlayer() == null) {
							event.setCancelled(true);
							return;
						}
						
						Integer integer = banCache.getIfPresent(event.getPlayer().getUniqueId());
						
						if (integer != null) {
							event.setCancelled(true);
							return;
						}

						ItemStack stack = event.getPacket().getItemModifier().readSafely(0);

						if (stack == null || stack.getType() != Material.WRITTEN_BOOK) {
							return;
						}

						ItemStack inHand = event.getPlayer().getItemInHand();

						if (inHand == null || inHand.getType() != Material.WRITTEN_BOOK) {
							event.setCancelled(true);
							plugin.getLogger().log(Level.INFO, "ยง6Tentando crashar o servidor com BookFlooder.",
									event.getPlayer().getName());
							disconnect(event.getPlayer(), "Book Flooder");
							banCache.put(event.getPlayer().getUniqueId(), 1);
							return;
						}

						try {
							checkNbtTags(stack);
						} catch (IOException e) {
							event.setCancelled(true);
							plugin.getLogger().log(Level.INFO, "ยง6Tentando crashar o servidor com BookFlooder.",
									event.getPlayer().getName());
							disconnect(event.getPlayer(), "Book Flooder");
							banCache.put(event.getPlayer().getUniqueId(), 1);
							return;
						}
					}
				}).start();
	}
	
	private void checkNbtTags(ItemStack itemStack) throws IOException {
		NbtCompound root = (NbtCompound) NbtFactory.fromItemTag(itemStack);
		if (root == null) {
			throw new IOException("a");
		} else if (!root.containsKey("pages")) {
			throw new IOException("b");
		} else {
			NbtList<String> pages = root.getList("pages");
			if (pages.size() > 50) {
				throw new IOException("c");
			}
			for (String page : pages) {
				if (page.length() > 320) {
					throw new IOException("d");
				}
			}
		}
	}

}
